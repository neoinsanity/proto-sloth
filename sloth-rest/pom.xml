<?xml version="1.0" encoding="UTF-8"?>
<project>
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>proto.sloth</groupId>
        <artifactId>proto-sloth</artifactId>
        <version>1.0-DEV-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <name>Sloth REST Implementation</name>
    <artifactId>sloth-rest</artifactId>
    <packaging>war</packaging>

    <build>
        <plugins>

            <!--
            The following section is a configuration that allows the web application to be run via
            command: mvn jetty:run.  The use of this command will launch a jetty instance that containes
            a running instance of the current code base.

            - DEVELOPER NOTE: The jetty instance is set to load up the log4j.properties file from the
            test-classes classpath. This means that changes made to the src/test/resources/log4j.properties
            file will be honored during jetty webapp execution.

            - DEVELOPER NOTE: To run the webapp in debug mode using Java Platform Debugger Architecture (JPDA),
            first set MAVEN_OPTS environment variable with the following command:

                export MAVEN_OPTS='-Xdebug -Xrunjdwp:transport=dt_socket,address=4000,server=y,suspend=y'

            The address to use to connect to JPDA is the address=<port>. Don't forget to either change
            the address on the export commandline above, or change the default address port in your IDE to debug.
            The 'suspend=y' setting above will cause the jvm executing the 'maven jetty:run' to block
            startup, until a debug connection is established. The 'suspend=n' setting will allow for
            dynamic connection to the jpda port.
            -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <configuration>
                    <contextPath>/</contextPath>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <stopKey>test</stopKey>
                    <stopPort>9999</stopPort>
                    <systemProperties>
                        <systemProperty>
                            <name>jetty.port</name>
                            <value>8092</value>
                        </systemProperty>
                        <systemProperty>
                            <name>slf4j</name>
                            <value>false</value>
                        </systemProperty>
                        <systemProperty>
                            <name>log4j.configuration</name>
                            <value>file:./target/test-classes/log4j.properties</value>
                        </systemProperty>
                    </systemProperties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>log4j</groupId>
                        <artifactId>log4j</artifactId>
                        <version>1.2.12</version>
                        <type>jar</type>
                    </dependency>
                </dependencies>
            </plugin>

        </plugins>
    </build>

    <dependencies>

        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>sloth-api</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.parent.groupId}</groupId>
            <artifactId>sloth-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.htmlunit</groupId>
            <artifactId>htmlunit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>jasper</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-core-container-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-core-api-container</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-core-api-generic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-core-api-module</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-core-api-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <classifier>jdk15</classifier>
        </dependency>

    </dependencies>

</project>
