<?xml version="1.0" encoding="UTF-8"?>
<project>
    <modelVersion>4.0.0</modelVersion>

    <name>Sloth Prototype Development Environment</name>
    <groupId>proto.sloth</groupId>
    <artifactId>proto-sloth</artifactId>
    <version>1.0-DEV-SNAPSHOT</version>
    <packaging>pom</packaging>

    <!--
    These are the projects that make up the sloth proto type environment.

    Developer Note:
    1. Keep the modules in alphabetical order.
    2. Keep the convention of module names using '-' separators.
    3. Keep the module name to dir convention.
    4. U break it, u fix it.
    -->
    <modules>
        <module>sloth-api</module>
        <module>sloth-core</module>
        <module>sloth-rest</module>
    </modules>

    <build>

        <plugins>

            <!--
            Default Java Compiler Configuration
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!--
                       Ensure that the java source and the compiled byte code
                       are Java 1.7 SDK, for the entire proto type environment.
                    -->
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

            <!--
            Default Java Doc Configuration
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <executions>
                    <!--
                    This execution goal ensures that java docs are included during
                    installation and deployment of artifacts to maven repository.
                    -->
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            Default Resource Handler Configuration
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <!--
                    This setting is used to ensure that copied resources are UTF-8
                    -->
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!--
            Default Java Source Handler Configuration
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <!--
                    This execution goal ensures that the Java source is included
                    during the installation and deployment of artifacts to
                    maven repository.
                    -->
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
            Default Unit Test Runtime Configuration
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--
                       This configuration setting is used to invoke only those tests that
                       are marked for the 'dev' test group. To include a test as part of
                       the default dev test, annotate via TestNG annotation:

                                     @Test(groups = {"dev"})

                    -->
                    <groups>dev</groups>
                </configuration>
            </plugin>

        </plugins>


        <pluginManagement>
            <plugins>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>2.11</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.16</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>2.16</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>maven-jetty-plugin</artifactId>
                    <version>${jetty-version}</version>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>

            <!--
            Internal Module Dependency Declarations

            DEVELOPER NOTE:
            1. Keep em in alphabetical order.
            2. U break it, u fix it.
            -->
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>sloth-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>${project.groupId}</groupId>
                <artifactId>sloth-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!--
            Production Third Party Artifact Dependencies
            -->
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey-version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.ext</groupId>
                <artifactId>jersey-spring3</artifactId>
                <version>${jersey-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-web</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.3</version>
            </dependency>
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>persistence-api</artifactId>
				<version>1.0.2</version>
			</dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring-version}</version>
            </dependency>

            <!--
            Test Third Party Artifact Dependencies
            -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>2.5</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.htmlunit</groupId>
                <artifactId>htmlunit</artifactId>
                <version>2.13</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>jasper</artifactId>
                <version>6.0.37</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-core-container-jetty</artifactId>
                <version>${cargo-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-core-api-container</artifactId>
                <version>${cargo-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-core-api-generic</artifactId>
                <version>${cargo-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-core-api-module</artifactId>
                <version>${cargo-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-core-api-util</artifactId>
                <version>${cargo-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty-version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring-version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>6.8.1</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <reporting>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.11</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.16</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.6</version>
            </plugin>

        </plugins>

    </reporting>

    <properties>

        <!--
        Cargo Version Declaration
        This id done as a property to ensure that all the Cargo framework
        components are on the same version. Failure to do so can result
        in bizarre behavior, that will appear to be orthoganal.
        -->
        <cargo-version>1.4.5</cargo-version>
        <!--
        RESTEasy Version Declaration
        This is done as a property to ensure that all the RESTEasy framework
        components are on the same version. Failure to do so can result
        in bizarre behavior, that will appear to be orthogonal.
        -->
        <jersey-version>2.5.1</jersey-version>
        <!--
        Jetty Version Declaration
        This is done as a property to ensure that all the Jetty usages
        are on the same version. Failure to do so can result in inconsistent
        behavior between embedded unit tests and runtime usage of jetty.
        -->
        <jetty-version>9.1.1.v20140108</jetty-version>
        <!--
        Spring Framework Version Declaration
        This is done as a property to ensure that all the Spring framework
        components are on the same version. Failure to do so can result
        in bizarre behavior, that will appear to be orthogonal.
        -->
        <spring-version>4.0.1.RELEASE</spring-version>

        <!--
        The following properties ensure that UTF-8
        encoding is used for source files.
        -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--
        The following property ensures that UTF-8
        encoding is used for reporting output
        -->
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    </properties>

    <repositories>
    </repositories>

</project>
